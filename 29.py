"""
Consider all integer combinations of a^b for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
2^2=4, 2^3=8, 2^4=16, 2^5=32
3^2=9, 3^3=27, 3^4=81, 3^5=243
4^2=16, 4^3=64, 4^4=256, 4^5=1024
5^2=25, 5^3=125, 5^4=625, 5^5=3125
If they are then placed in numerical order, with any repeats removed, we get 
the following sequence of 15 distinct terms:
4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
How many distinct terms are in the sequence generated by a^b for 2 ≤ a ≤ 100 
and 2 ≤ b ≤ 100?
"""
import math

d = {}
m = 100
for i in range( 2, m+1 ):
    for power in range( 2, m+1 ):
    #   if d.get( i ) is not None:
    #      continue
        
        if d.get( i ) is None:
            d[i] = m - 1
        if i **power < m:

            drop = math.floor( m/power )

            if drop == m/power:
                drop += 1

            d[i**power] = m - drop

print( sum( d.values()))