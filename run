#! python

import sys, re
import os, importlib
import time

from typing import Tuple, Union, List

args = sys.argv

if len( args ) <= 1:
    print( 'Please specifiy the problem number to test.' )
    print( 'Ex. ./run 23' )
    exit()

tests = args[1:]

def validateTest( test: str ) -> bool:


    if re.match( r'\d{1,3}', test ) is None:
        print( f'The problem number {test} is not a suitable option.' )
        print( 'Try a natural number.' )
        return False

    return True
    
def padTestPath( test: str ) -> str:

    while len( test ) != 3:
        test = '0' + test

    return test

def computeTests( tests: List[str] ) -> None:

    for test in tests:

        test_is_valid = validateTest( test )

        if test_is_valid:

            testpath = f'solutions/{test}.py'
            importpath = f'solutions.{test}'
            answers = getAnswers()

            my_answer, duration = getMyAnswer( testpath )


            answer = answers[test]
            print( len( my_answer), len( answer ))
            if my_answer == answer:
                print( 'CORRECT!' )
                print( f'{my_answer} == {answer}' )
                print( duration )

            else:
                print( 'INCORRECT!' )
                print( f'{my_answer} != {answer}' )






def getAnswers():
    answers = {}

    with open( 'data/answers.txt', newline = '' ) as f:
        for line in f:
            m = re.search( r'Problem (\d{3}): (.*)', line )

            problem = m.group(1)
            answer = m.group(2)

            answers[problem] = answer
        
    return answers        

def getMyAnswer( testpath: str ) -> Tuple( Union[str, None], Union[float, None] ):

    my_answer = None
    duration = None

    if os.path.exists( testpath ):
        module = importlib.import_module( importpath )

        start = time.time()
        my_answer = str( module.run())
        duration = time.time() - start

    else:

        print( f'The path {testpath} could not be found.' )

    return (my_answer, duration)





# name=$1

# if [ ${#1} -eq 1 ]; then

#     name="00${1}"

# elif [ ${#1} -eq 2 ]; then
#     name="0${1}"

# else
#     name=$1
# fi

# path="solutions/${name}.py"

# python $path