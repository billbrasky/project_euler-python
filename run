#! python

import sys, re
import os, importlib
import time

from typing import Tuple, Union, List


# Checks if provided test is numeric 1 to 3 digits
#
def validateTest( test: str ) -> bool:


    if re.match( r'\d{1,3}', test ) is None:
        print( f'The problem number {test} is not a suitable option.' )
        print( 'Try a natural number.' )
        return False

    return True

# Pads the test on the left to be 3 digits
#   
def padTestPath( test: str ) -> str:

    while len( test ) != 3:
        test = '0' + test

    return test

# Processes a test to compare its solution to the answers.
# 
def processTest( test: str ) -> None:

    test_is_valid = validateTest( test )

    test = padTestPath( test )

    if test_is_valid:

        testpath = f'solutions/{test}.py'
        answers = getAnswers()

        my_answer, duration = getMyAnswer( testpath )


        answer = answers[test]
        if my_answer == answer:
            print( 'CORRECT!' )
            print( f'{my_answer} == {answer}' )
            print( duration )

        else:
            print( 'INCORRECT!' )
            print( f'{my_answer} != {answer}' )

# Gets all of the answers from a provided file
#
def getAnswers():
    answers = {}

    with open( 'data/answers.txt', newline = '' ) as f:
        for line in f:
            m = re.search( r'Problem (\d{3}): (.*)', line )

            problem = m.group(1)
            answer = m.group(2)

            answers[problem] = answer
    return answers        

# Executes the script at a specific path
#
def getMyAnswer( testpath: str ) -> Tuple[Union[str, None], Union[float, None]]:

    my_answer = None
    duration = None
    importpath = testpath.replace( '/', '.' )[:-3]
    if os.path.exists( testpath ):
        module = importlib.import_module( importpath )

        start = time.time()
        my_answer = str( module.run())
        duration = time.time() - start

    else:

        print( f'The path {testpath} could not be found.' )

    return (my_answer, duration)


if __name__ == "__main__":
    
    args = sys.argv

    if len( args ) <= 1:
        print( 'Please specifiy the problem number to test.' )
        print( 'Ex. ./run 23' )
        exit()

    tests = args[1:]

    for test in tests:
        processTest( test )





