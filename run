#! python
"""Project Euler.

Usage:
    ./run (-p | --problem) <x> ...
    ./run (-a | --all)
    ./run (-h | --help)

Examples:
    ./run -p 1
    ./run -p 1 2 3 4
    ./run -a

Options:
    -h --help       Show this screen.
    -a --all        Run all tests.
    -p --problem    Run any number of tests.
"""
from docopt import docopt

from util.run_tools import *
import time, os
from glob import glob

if __name__ == "__main__":
    arguments = docopt( __doc__ )

    if arguments['--problem'] and arguments['<x>'] == []:
        print( 'Please specifiy the problem number to test.' )
        print( 'Ex. ./run -p 23' )
        exit()

    elif not arguments['--problem'] and arguments['<x>'] != []:
        print( 'Please follow rules.' )
        insert  = ' '.join( arguments['<x>'] )
        print( f'./run -p {insert} NOT ./run {insert}' )
        exit()

    


    test_all = arguments['--all']
    if test_all:
        tests = list( glob('solutions/*.py' ))
        tests.sort()

    else:
        tests = arguments['<x>']


    answers = getAnswers()
    begin_tests = time.time()
    for test in tests:
        if not test_all:

            pe_problem = ProjectEuler( test = test )

            if pe_problem.validateTest():
                pe_problem.padTestPath()
                pe_problem.test_path = f'solutions/{pe_problem.test}.py'
                pe_problem.getMyAnswer()

        else:
            test_path = test
            test = re.search( r'[\\/](\d{3}).py', test_path ).groups(1)[0]
            pe_problem = ProjectEuler( test = test, test_path = test_path )

        pe_problem.getAnswer( answers )

        pe_problem.getMyAnswer()

        pe_problem.processTest()



        if pe_problem.my_answer is None:
            log( test, 'Failure', 'Failure', pe_problem.duration, begin_tests )
        else:
            log( test, 'Completed', pe_problem.passed, pe_problem.duration, begin_tests )



